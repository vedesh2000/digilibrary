
<div class="container">
  <h1 class="mb-1">Chapter Number: <%= chapter.chapterNumber %></h1>
  <h1 class="mb-1">Title: <%= chapter.title %></h1>
  <div id="description">
    <%- chapter.sanitizedDescription %>
  </div>
  <a href="/files/books/<%= bookId%>/notes" class="btn btn-primary">All chapters</a>
  <a href="edit/" class="btn btn-primary">Edit</a>
  <br>
  <br>
  <div class="description">
    <button onclick="copyText()">Copy Text</button>
    <div id="notes">
      <%- chapter.sanitizedNotesMarkdown %>
    </div>
    <label for="speed">Speed</label>
    <input type="number" name="speed" id="speed" min=".25" max="3" step=".25" value="1">
    <button id="stop" onclick="stop();">Stop</button>
    <button id="play" onclick="play();">Play</button>
    <button id="pause" onclick="pause();"></button>
  </div>
</div>

<script>

function copyText() {
  // Get the content of the div
  var description = document.getElementById("notes").innerText;

  // Create a temporary textarea element
  var textarea = document.createElement("textarea");
  textarea.value = description;

  // Append the textarea to the document
  document.body.appendChild(textarea);

  // Select the text in the textarea
  textarea.select();
  textarea.setSelectionRange(0, 99999); // For mobile devices

  // Copy the text to the clipboard
  document.execCommand("copy");

  // Remove the temporary textarea
  document.body.removeChild(textarea);

  // Alert the user
  alert("Text copied to clipboard: " + description);
}
//Speech/////////////////////////////////////////////////////////////////////////////////////

var description = document.getElementById("notes").innerText;
var pauseButton = document.getElementById("pause");
pauseButton.textContent = "Pause";
// Create a temporary textarea element
var textInput = document.createElement("textarea");
textInput.value = description;

// Append the textInput to the document
document.body.appendChild(textInput);


const synth = window.speechSynthesis;
    let myPauseProperty = false;
    let utterThis;
    function stop() {
        myPauseProperty = false;
        synth.cancel(utterThis);
    }
    function play() {
      const speedInput = document.getElementById('speed').value;
        if ((myPauseProperty === true)&&(synth.speaking===true)) {//alredy started not ended
            //speech somewhere in the middle, and paused, needs resumed
            synth.resume();
            //added below line to reslove bug in android chrome
            synth.speak(utterThis);
            myPauseProperty=false;
        }
        else if (synth.speaking===false) {
            let flag = true;
            //not started or has ended, user expects to start play
            utterThis = new SpeechSynthesisUtterance(textInput.value);
            utterThis.lang = 'en-US';
            utterThis.rate = parseFloat(speedInput);
            synth.cancel();
            //adjust the speed
            synth.speak(utterThis);
            //adding to resolve pausing for long texts more than 14sec
            let r = setInterval(() => {
            // console.log(synth.speaking);
            if (!synth.speaking) {
              clearInterval(r);
            } else {
              synth.pause();
              synth.resume();
            }
            }, 14000);
            myPauseProperty=false;
        }
    }
    function pause() {
        if ((myPauseProperty === true)&&(synth.speaking===true)) {
            //speech somewhere in middle of phrase and paused, user wants unpause
            synth.resume();
            pauseButton.textContent = "Pause";
            myPauseProperty = false;
        }
        else if ((myPauseProperty === false)&&(synth.speaking===true)) {
            //speech somewhere in middle of phrase and unpaused, user wants pause
            synth.pause();
            myPauseProperty=true;
            pauseButton.textContent = "Resume";
        }
    }
// Remove the temporary textInput
document.body.removeChild(textInput);
</script>
